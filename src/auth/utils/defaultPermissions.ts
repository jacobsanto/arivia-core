/**
 * Default permissions utility
 * Provides default permissions based on user roles
 */
import { UserRole } from "@/auth/types";

// Default permission sets by role
const DEFAULT_PERMISSIONS: Record<UserRole, Record<string, boolean>> = {
  superadmin: {
    viewProperties: true,
    manageProperties: true,
    viewAllTasks: true,
    viewAssignedTasks: true,
    assignTasks: true,
    viewInventory: true,
    manageInventory: true,
    approveTransfers: true,
    viewUsers: true,
    manageUsers: true,
    manageSettings: true,
    viewReports: true,
    manage_bookings: true,
    create_orders: true,
    approve_orders: true,
    finalize_orders: true,
    view_reports: true,
  },
  administrator: {
    viewProperties: true,
    manageProperties: true,
    viewAllTasks: true,
    viewAssignedTasks: true,
    assignTasks: true,
    viewInventory: true,
    manageInventory: true,
    approveTransfers: true,
    viewUsers: true,
    manageUsers: true,
    manageSettings: true,
    viewReports: true,
    manage_bookings: true,
    create_orders: true,
    approve_orders: true,
    finalize_orders: true,
    view_reports: true,
  },
  property_manager: {
    viewProperties: true,
    manageProperties: true,
    viewAllTasks: true,
    viewAssignedTasks: true,
    assignTasks: true,
    viewInventory: true,
    manageInventory: true,
    approveTransfers: true,
    viewUsers: true,
    manageUsers: false,
    manageSettings: false,
    viewReports: true,
    manage_bookings: true,
    create_orders: true,
    approve_orders: false,
    finalize_orders: false,
    view_reports: true,
  },
  concierge: {
    viewProperties: true,
    manageProperties: false,
    viewAllTasks: false,
    viewAssignedTasks: true,
    assignTasks: false,
    viewInventory: true,
    manageInventory: false,
    approveTransfers: false,
    viewUsers: false,
    manageUsers: false,
    manageSettings: false,
    viewReports: false,
    manage_bookings: true,
    create_orders: false,
    approve_orders: false,
    finalize_orders: false,
    view_reports: false,
  },
  housekeeping_staff: {
    viewProperties: true,
    manageProperties: false,
    viewAllTasks: false,
    viewAssignedTasks: true,
    assignTasks: false,
    viewInventory: true,
    manageInventory: false,
    approveTransfers: false,
    viewUsers: false,
    manageUsers: false,
    manageSettings: false,
    viewReports: false,
    manage_bookings: false,
    create_orders: true,
    approve_orders: false,
    finalize_orders: false,
    view_reports: false,
  },
  maintenance_staff: {
    viewProperties: true,
    manageProperties: false,
    viewAllTasks: false,
    viewAssignedTasks: true,
    assignTasks: false,
    viewInventory: true,
    manageInventory: false,
    approveTransfers: false,
    viewUsers: false,
    manageUsers: false,
    manageSettings: false,
    viewReports: false,
    manage_bookings: false,
    create_orders: true,
    approve_orders: false,
    finalize_orders: false,
    view_reports: false,
  },
  inventory_manager: {
    viewProperties: true,
    manageProperties: false,
    viewAllTasks: false,
    viewAssignedTasks: true,
    assignTasks: false,
    viewInventory: true,
    manageInventory: true,
    approveTransfers: true,
    viewUsers: false,
    manageUsers: false,
    manageSettings: false,
    viewReports: true,
    manage_bookings: false,
    create_orders: true,
    approve_orders: true,
    finalize_orders: false,
    view_reports: true,
  },
  housekeeper: {
    viewProperties: true,
    manageProperties: false,
    viewAllTasks: false,
    viewAssignedTasks: true,
    assignTasks: false,
    viewInventory: true,
    manageInventory: false,
    approveTransfers: false,
    viewUsers: false,
    manageUsers: false,
    manageSettings: false,
    viewReports: false,
    manage_bookings: false,
    create_orders: false,
    approve_orders: false,
    finalize_orders: false,
    view_reports: false,
  },
  manager: {
    viewProperties: true,
    manageProperties: true,
    viewAllTasks: true,
    viewAssignedTasks: true,
    assignTasks: true,
    viewInventory: true,
    manageInventory: true,
    approveTransfers: false,
    viewUsers: true,
    manageUsers: false,
    manageSettings: false,
    viewReports: true,
    manage_bookings: true,
    create_orders: true,
    approve_orders: false,
    finalize_orders: false,
    view_reports: true,
  },
  pool_service: {
    viewProperties: true,
    manageProperties: false,
    viewAllTasks: false,
    viewAssignedTasks: true,
    assignTasks: false,
    viewInventory: true,
    manageInventory: false,
    approveTransfers: false,
    viewUsers: false,
    manageUsers: false,
    manageSettings: false,
    viewReports: false,
    manage_bookings: false,
    create_orders: false,
    approve_orders: false,
    finalize_orders: false,
    view_reports: false,
  },
  external_partner: {
    viewProperties: false,
    manageProperties: false,
    viewAllTasks: false,
    viewAssignedTasks: true,
    assignTasks: false,
    viewInventory: false,
    manageInventory: false,
    approveTransfers: false,
    viewUsers: false,
    manageUsers: false,
    manageSettings: false,
    viewReports: false,
    manage_bookings: false,
    create_orders: false,
    approve_orders: false,
    finalize_orders: false,
    view_reports: false,
  },
};

/**
 * Get default permissions for a role
 */
export const getDefaultPermissionsForRole = (
  role: UserRole,
  secondaryRoles?: UserRole[]
): Record<string, boolean> => {
  // Start with primary role permissions
  let permissions = { ...DEFAULT_PERMISSIONS[role] };

  // Add secondary role permissions if they exist
  if (secondaryRoles && secondaryRoles.length > 0) {
    secondaryRoles.forEach(secondaryRole => {
      const secondaryPermissions = DEFAULT_PERMISSIONS[secondaryRole];
      if (secondaryPermissions) {
        // Merge permissions, giving precedence to 'true' values
        Object.keys(secondaryPermissions).forEach(key => {
          if (secondaryPermissions[key]) {
            permissions[key] = true;
          }
        });
      }
    });
  }

  return permissions;
};